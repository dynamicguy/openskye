<?xml version="1.0" encoding="UTF-8"?>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountLoginTest" searchProperties="true" id="071294ac-4824-42b3-8b94-9f0abf346e17" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testStep type="restrequest" name="AccountLogin">
    <con:settings/>
    <con:config service="REST API" resourcePath="/api/${#Project#version}/account" methodName="GetAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="AccountLogin" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://${#Project#apiAddress}:5000</con:endpoint>
        <con:request/>
        <con:assertion type="XPath Match" name="Check for existance of [apiKey]">
          <con:configuration>
            <path>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
exists( //ns1:Response/ns1:apiKey)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" name="Check for existance of [email]">
          <con:configuration>
            <path>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
exists( //ns1:Response/ns1:email)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" name="Check for existance of [id]">
          <con:configuration>
            <path>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
exists( //ns1:Response/ns1:id)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" name="Check for existance of [name]">
          <con:configuration>
            <path>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
exists( //ns1:Response/ns1:name)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" name="Match content of [apiKey]">
          <con:configuration>
            <path>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
//ns1:Response[1]/ns1:apiKey[1]/text()</path>
            <content>123</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:username>admin@openskye.org</con:username>
          <con:password>changeme</con:password>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="SaveUserInfo">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
        <con:name>UserApiKey</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>AccountLogin</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
//ns1:Response[1]/ns1:apiKey[1]</con:sourcePath>
        <con:targetType>userApiKey</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
        <con:name>UserEmail</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>AccountLogin</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
//ns1:Response[1]/ns1:email[1]</con:sourcePath>
        <con:targetType>userEmail</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false">
        <con:name>UserId</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>AccountLogin</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
//ns1:Response[1]/ns1:id[1]</con:sourcePath>
        <con:targetType>userId</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
        <con:name>UserName</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>AccountLogin</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://${#Project#apiAddress}/api/${#Project#version}/account';
//ns1:Response[1]/ns1:name[1]</con:sourcePath>
        <con:targetType>userName</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>